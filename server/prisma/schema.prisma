// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  Item         Item[]
  Token        Token[]
}

model Token {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  blocked         Boolean  @default(false)
  rotationCounter Int      @default(1)
  user            User     @relation(fields: [userId], references: [id])
  userId          Int
}

model Item {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  link        String?
  thumbnail   String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  siteInfo    SiteInfo   @relation(fields: [siteInfoId], references: [id])
  siteInfoId  Int
  ItemTags    ItemTags[]
}

model SiteInfo {
  id      Int     @id @default(autoincrement())
  name    String
  favicon String?
  domain  String  @unique
  Item    Item[]
}

model Tag {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  ItemTags ItemTags[]
}

model ItemTags {
  item   Item @relation(fields: [itemId], references: [id])
  itemId Int
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int

  @@id([itemId, tagId])
  @@index(tagId)
  @@index(itemId)
}

model TagRelation {
  id            Int @id @default(autoincrement())
  tagId         Int
  originalTagId Int

  @@index(tagId)
  @@index(originalTagId)
}

model ItemLike {
  id        Int      @id @default(autoincrement())
  itemId    Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([itemId, userId])
}
